#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt {
  flavor = "balanced";
  quick-tap-ms = <175>;
  tapping-term-ms = <250>;
  hold-trigger-on-release;
};

/ {
  combos {
    compatible = "zmk,combos";

    ret_combo {
      bindings = <&kp ENTER>;
      key-positions = <28 27>;
      layers = <0>;
    };

    backspace {
      bindings = <&kp BACKSPACE>;
      key-positions = <7 8>;
      layers = <0>;
    };

    esc_combo {
      bindings = <&kp ESCAPE>;
      key-positions = <1 2>;
      layers = <0>;
    };

    tab_combo {
      bindings = <&kp TAB>;
      key-positions = <22 21>;
      layers = <0>;
    };
  };

  behaviors {
    hml: homewrow_mods_left {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      flavor = "balanced";
      bindings = <&kp>, <&kp>;
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      require-prior-idle-ms = <150>;
      hold-trigger-on-release;
      hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33>;
    };

    hmr: homewrow_mods_right {
      compatible = "zmk,behavior-hold-tap";
      #binding-cells = <2>;
      bindings = <&kp>, <&kp>;
      require-prior-idle-ms = <150>;
      tapping-term-ms = <280>;
      quick-tap-ms = <175>;
      flavor = "balanced";
      hold-trigger-on-release;
      hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
    };

    swap: swapper {
      compatible = "zmk,behavior-tri-state";
      #binding-cells = <0>;
      bindings = <&kt LGUI>, <&kp TAB>, <&kt LGUI>;

      ignored-key-positions = <1>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    QWERTY {
      bindings = <
        &kp Q        &kp W         &kp E        &kp R            &kp T        &kp Y    &kp U         &kp I        &kp O         &kp P
        &hml LALT A  &hml LCTRL S  &hml LGUI D  &hml LSHFT F     &kp G        &kp H    &hmr RSHFT J  &hmr RGUI K  &hmr RCTRL L  &hmr RALT SEMI
        &kp Z        &kp X         &kp C        &kp V            &kp B        &kp N    &kp M         &kp COMMA    &kp DOT       &kp FSLH
                                                &lt 1 BACKSPACE  &kp LSHFT    &kp RET  &lt 2 SPACE
      >;
    };

    Extend {
      bindings = <
        &kp ESCAPE  &kp LS(TAB)  &kp TAB    &swap      &kp LG(GRAVE)                &kp TAB   &kp GRAVE      &none        &none      &none
        &kp LALT    &kp LCTRL    &kp LGUI   &kp LSHFT  &kp LS(LG(RIGHT_BRACKET))    &kp LEFT  &kp DOWN       &kp UP       &kp RIGHT  &none
        &kp LG(Z)   &kp LG(X)    &kp LG(C)  &kp LG(V)  &kp LS(LG(LEFT_BRACKET))     &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP  &kp END    &none
                                            &trans     &trans                       &kp RET   &lt 3 SPACE
      >;
    };

    Numbers {
      bindings = <
        &kp ESC       &kp TILDE      &kp LEFT_BRACKET  &kp LPAR         &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RPAR       &kp RIGHT_BRACKET  &kp GRAVE      &none
        &hml LALT N1  &hml LCTRL N2  &hml LGUI N3      &hml LSHFT N4    &kp N5            &kp N6           &hmr RSHFT N7  &hmr RGUI N8       &hmr RCTRL N9  &hmr RALT N0
        &kp PIPE      &kp PLUS       &kp UNDERSCORE    &kp DQT          &trans            &trans           &kp SQT        &kp MINUS          &kp EQUAL      &kp BACKSLASH
                                                       &lt 3 BACKSPACE  &trans            &trans           &trans
      >;
    };

    System {
      bindings = <
        &none         &none         &none         &none         &none           &none           &none              &none            &none       &studio_unlock
        &none         &none         &none         &none         &bt BT_CLR      &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &none
        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none           &kp C_PLAY_PAUSE   &kp K_MUTE       &none       &none
                                                  &trans        &none           &none           &trans
      >;
    };

    NumberAgain {
      bindings = <
        &kp ESC  &kp GRAVE                &kp LEFT_BRACKET  &kp LPAR         &kp LEFT_BRACE    &none   &kp N7         &kp N8        &kp N9         &none
        &none    &hml LCTRL SINGLE_QUOTE  &hml LGUI RBKT    &hml LSHFT RPAR  &kp RBRC          &none   &hmr RSHFT N4  &hmr RGUI N5  &hmr RCTRL N6  &none
        &none    &kp BACKSLASH            &kp MINUS         &kp EQUAL        &none             &kp N0  &kp N1         &kp N2        &kp N3         &none
                                                            &lt 3 BACKSPACE  &trans            &trans  &trans
      >;
    };
  };
};
